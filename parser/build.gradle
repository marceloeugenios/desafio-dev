plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id "com.palantir.docker" version "0.30.0"
}

group = 'br.com.bycoders'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

tasks.named("bootJar") {
    enabled = true
    mainClass = 'br.com.bycoders.parser.FileParserApplication'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.keycloak:keycloak-spring-boot-starter:17.0.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.7'
    implementation 'org.flywaydb:flyway-core'

    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testRuntimeOnly 'com.h2database:h2'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

tasks.named("test") {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn build

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/FileParserApplication.*",
                    "**/*AutenticacaoServico*.*",
                    "**/*Dto.*",
                    "**/*error/*.*"
            ])
        }))
    }
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule {
            limit {
                minimum = 0.7
            }
        }
    }
}

docker {
    dependsOn test
    name "marceloeugenios/desafio-dev-be-app:latest"
    files "parser-${version}.jar"
    tag 'DockerHub', "marceloeugenios/desafio-dev-be-app:latest"
    noCache true
}

dockerPrepare {
    dependsOn bootJar
    from "build/libs/parser-${version}.jar"
    into '.'
}